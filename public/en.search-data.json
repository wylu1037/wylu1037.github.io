{"/about/":{"data":{"":" ","github#Github":" Awesome resume preview view my resumeThis is a online resume generate by react and next.js. You can view it on my github repository resume repositoryThis is a online resume generate by react and next.js. You can view it on my github repository ","template#Template":" Awesome resume preview FoodFrom simple home-cooked dinners at home, to tasting new dishes while traveling — food connects us all. This category examines the world of food photography, with shots of everything from summer picnics in the park to decadent deserts. NatureNature’s wonders take center stage in this category, where photographers capture the breathtaking landscapes, diverse flora and fauna, and mesmerizing natural phenomena that adorn our planet. From grand vistas to macro shots, these images transport viewers into the heart of the great outdoors. Email Auth GitHub Auth This kind of auth requires a valid and non-temporary disposable e-mail, and a password having at least 6 characters. Do not forget to validate your email by clicking the link you will receive. The GitHub signup allows you to create an account or link your existing one to GitHub, in one click. This process asks the following permissions:\nRead your Public Key\nRead User Repositories\nThe “repository permission” is used to deploy your GitHub apps directly to Clever Cloud, with a simple step. If you need to give access to Clever Cloud’s API to a specific GitHub organization, you can do it here."},"title":"_index"},"/blog/":{"data":{"":" ","back-end#Back End":" Back-end tech stack Go GoConfigure your Django application to run on Clever Cloud Ruby On Rails RailsConfigure your Django application to run on Clever Cloud Rust RustConfigure your Django application to run on Clever Cloud ","blockchain#Blockchain":"Ethereum EthereumConfigure your Django application to run on Clever Cloud Bitcoin BitcoinConfigure your Django application to run on Clever Cloud Hyperledger HyperledgerConfigure your Django application to run on Clever Cloud WindowsConfigure your Django application to run on Clever Cloud MacConfigure your Django application to run on Clever Cloud NetworkConfigure your Django application to run on Clever Cloud sassConfigure your Django application to run on Clever Cloud AnsibleConfigure your Django application to run on Clever Cloud AppleConfigure your Django application to run on Clever Cloud ","devops#DevOps":" DevOps is the combination of cultural philosophies, practices, and tools that increases an organization’s ability to deliver applications and services at high velocity: evolving and improving products at a faster pace than organizations using traditional software development and infrastructure management processes. Docker-Compose NetworkBy default Compose sets up a single network for your app. Each container for a service joins the default network and is both reachable by other containers on that network, and discoverable by the service’s name. Docker Swarm NetworkBy default Compose sets up a single network for your app. Each container for a service joins the default network and is both reachable by other containers on that network, and discoverable by the service’s name. Kubernetes NetworkBy default Compose sets up a single network for your app. Each container for a service joins the default network and is both reachable by other containers on that network, and discoverable by the service’s name. ","front-end#Front End":"CSS CSSConfigure your Django application to run on Clever Cloud TailwindConfigure your Django application to run on Clever Cloud Frameworks Next.jsConfigure your Django application to run on Clever Cloud NestJSConfigure your Django application to run on Clever Cloud SolidJSConfigure node-statsd package on your Node.js application to push custom metrics Lang TypeScriptConfigure your Django application to run on Clever Cloud JavaScriptConfigure your Django application to run on Clever Cloud "},"title":"_index"},"/blog/cgo/":{"data":{"":"Home ","c-调用-go#C 调用 Go":"C references to Go Go functions can be exported for use by C code in the following way:\n//export MyFunction func MyFunction(arg1, arg2 int, arg3 string) int64 {...} //export MyFunction2 func MyFunction2(arg1, arg2 int, arg3 string) (int64, *C.char) {...} They will be available in the C code as:\nextern GoInt64 MyFunction(int arg1, int arg2, GoString arg3); extern struct MyFunction2_return MyFunction2(int arg1, int arg2, GoString arg3); Not all Go types can be mapped to C types in a useful way. Go struct types are not supported; use a C struct type. Go array types are not supported; use a C pointer.","go-调用-c#Go 调用 C":"qkd.go/* #cgo CFLAGS: -I./include #cgo LDFLAGS: -L/app/lib -lkeyout -lstdc++ -lm #include \"KeyReadAPI.h\" void callbackFunc(uint32_t command, void *data); // 定义的 C 函数 */ import \"C\" ℹ️ #cgo CFLAGS: -I./include: 编译参数，主要是头文件的检索路径。 #cgo LDFLAGS: -L/app/lib -lkeyout -lstdc++ -lm: 链接参数：指定要链接库（静态库.a文件或动态库.so文件）的检索目录和要链接库的名字（注意是否区分大小写），不支持相对路径。 #include \"KeyReadAPI.h\": 包含的头文件，查找位置通过 cgo CFLAGS: -I./include指定 查看KeyReadAPI.h KeyReadAPI.hint auth_login(const char *config_path); void register_data_func(pfunc_process_data p_user_function); int read_key(uint32_t peer_dev_info,uint32_t key_read_id, uint32_t key_apply_len, uint8_t *quantum_key,uint32_t *quantum_key_len); typedef void (*pfunc_process_data)(uint32_t command, void *data); // 定义的回调函数，register_data_func注册该回调函数 void callbackFunc(uint32_t command, void *data)中void *data对应的 c++ 中定义的结构体。\nKeyReadAPI.htypedef struct { uint32_t key_read_id; //密钥读取标示 uint32_t key_len; //本次输出的密钥量 uint8_t key_data[512*1024]; //密钥数据 } st_key_push_data; 定义接口\nqkd.gotype QkdService interface { // AuthLogin 设备入网 AuthLogin() error // RegisterDataFunc 被动端用户函数注册 RegisterDataFunc() // ReadKey 主动端密钥申请 ReadKey() error } 定义结构体，实现接口并通过C.调用C代码\nqkd.gotype qkdService struct { config *config.Config } const configPath = \"/app/KeyOutLibConfig.xml\" const ( keyBufferLen = 0 // 量子密钥缓存实际长度 keyApplyLen = 1024 // 一次请求的密钥量，单位Byte，只支持1024的整数倍，上限512*1024 ) var keyQueue = \u0026KeyQueue{ key: make([]string, 0), } type KeyQueue struct { key []string } func (k *KeyQueue) Enqueue(key string) { log.Debug().Msgf(\"Qkd密钥入队列，key is %s\", key) k.key = append(k.key, key) } func (k *KeyQueue) Dequeue() (key string, err error) { if len(k.key) == 0 { return \"\", errors.New(\"\") } key = k.key[0] k.key = k.key[1:] return key, nil } func (svc *qkdService) AuthLogin() error { path := C.CString(configPath) //defer C.free(unsafe.Pointer(path)) code := int(C.auth_login(path)) if code == Success { return nil } errMsg, ok := qkdErrMsgGroup[qkdErrorCode(code)] if ok { return errors.New(errMsg) } return errors.New(\"QKD Auth Login接口未知异常\") } func (svc *qkdService) RegisterDataFunc() { C.register_data_func(C.pfunc_process_data(C.callbackFunc)) } func (svc *qkdService) ReadKey() error { var peerDevId = svc.config.Qkd.DevId // 被动端应用设备ID，配置文件值KSP ID var keyReadId = rand.Uint32() // 密钥读取标示，可用于标识读取次数，每次密钥申请此参数不能重复。 keyBuffer := make([]uint8, 512*1024) // 量子密钥数据缓存 cKeyBuffer := (*C.uint8_t)(unsafe.Pointer(\u0026keyBuffer[0])) cKeyBufferLen := new(uint32) *cKeyBufferLen = 0 cKeyBufferLenPtr := (*C.uint32_t)(unsafe.Pointer(cKeyBufferLen)) code := int(C.read_key(C.uint32_t(peerDevId), C.uint32_t(keyReadId), C.uint32_t(keyApplyLen), cKeyBuffer, cKeyBufferLenPtr)) if code != 0 { msg, ok := qkdErrMsgGroup[qkdErrorCode(code)] if ok { return errors.New(msg) } else { return errors.New(\"未知异常\") } } return nil } ","启用cgo特性#启用CGO特性":"package main import \"C\" func main() { // } 通过import \"C\"启用 CGO 特性，在go build时在编译和连接阶段启动 gcc 编译器。 CGO 会将import \"C\"语句上一行代码所处注释块的内容视为 C 代码块，被称为序文（preamble）。 ","编译选项#编译选项":"目录结构 qkd qkd.go include KeyReadAPI.h app lib libkeyout.a qkd.go代码\nqkd.go/* #cgo CFLAGS: -I./include #cgo LDFLAGS: -L/app/lib -lkeyout -lstdc++ -lm #include \"KeyReadAPI.h\" void callbackFunc(uint32_t command, void *data); // 定义的 C 函数 */ import \"C\" -lstdc++表示链接 C++ 标准库； -lm表示链接数学库（libm.a 或 libm.so）； "},"title":"😀 CGO"},"/blog/docker-compose-network/":{"data":{"":"","custom-network#Custom network":"一些场景下，默认的网络配置无法满足使用需求，可通过networks命令自定义网络。还可以使用networks将服务连接到不是由 Compose 管理的、外部创建的网络。\ndocker-compose.ymlversion: '2' services: proxy: build: ./proxy networks: - front app: build: ./app networks: - front - back db: image: postgres networks: - back networks: front: # Use a custom driver driver: custom-driver-1 back: # Use a custom driver which takes special options driver: custom-driver-2 driver_opts: foo: \"1\" bar: \"2\" 其中，proxy 服务与 db 服务隔离，两者分别使用自己的网络，app 服务可与两者通信。使用networks命令，即可方便实现服务间的网络隔离与连接。","default-network#Default network":"默认情况下，Compose 会创建一个网络，服务的每个容器都会加入该网络中，这样容器就可被网络中的其它容器访问。容器还能以服务名称作为hostname被其它容器访问。\n​应用程序的网络名称基于 Compose 的工程名称，而项目名称基于docker-compose.yml所在目录名称。如需修改工程名称，可使用--project-name标识或COMPOSE_PORJECT_NAME环境变量。\ndocker-compose.yml# 位于software目录下 version: '2' services: web: build: . ports: - \"8000:8000\" db: image: postgres 当执行docker-compose up指令时，将会分为一下几步：\n创建一个名为software_default的网络； 使用 web 服务的配置创建容器，并以web名称加入上述创建的网络； 使用 db 服务的配置创建容器，并以db名称加入网络； 容器间可以使用服务名称（web 或 db）作为 hostname 互相访问。例：web 服务可通过 postgres://db:5432访问 db 容器。","配置默认网络#配置默认网络":"docker-compose.yml,hl_lines=[1,2]version: '2' services: web: build: . ports: - \"8000:8000\" db: image: postgres networks: default: # Use a custom driver driver: custom-driver-1 links 服务之间可以使用服务名称互相访问。links允许定义一个别名，从而使用该别名访问服务。\ndocker-compose.ymlversion: '2' services: web: build: . links: - \"db:database\" db: image: postgres "},"title":"🛜 Docker-compose Network"},"/blog/how-to-achive-infinite-horizontal-scroll-animation-css-only/":{"data":{"":"\u003c!DOCTYPE html\u003e Infinite Scroll HTML CSS JavaScript ReactJS Figma Photoshop Premiere Pro Figma Angular Node JS HTML CSS JavaScript ReactJS Figma Photoshop Premiere Pro Figma Angular Node JS HTML CSS JavaScript ReactJS Figma Photoshop Premiere Pro Figma Angular Node JS HTML CSS JavaScript ReactJS Figma Photoshop Premiere Pro Figma Angular Node JS HTML CSS JavaScript ReactJS Figma Photoshop Premiere Pro Figma Angular Node JS HTML CSS JavaScript ReactJS Figma Photoshop Premiere Pro Figma Angular Node JS HTML CSS JavaScript ReactJS Figma Photoshop Premiere Pro Figma Angular Node JS HTML CSS JavaScript ReactJS Figma Photoshop Premiere Pro Figma Angular Node JS Are you prepare to creating an impressive infinite horizontal scroll animation using only CSS? Ok, you have come to the right place. Above is the display effect. Next, i will show you the code directly.\nClick me to see the full code index.html\u003c!DOCTYPE html\u003e \u003chtml lang=\"en\"\u003e \u003chead\u003e \u003cmeta charset=\"UTF-8\"\u003e \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e \u003ctitle\u003eInfinite Scroll\u003c/title\u003e \u003clink rel=\"stylesheet\" href=\"styles.css\"\u003e \u003c/head\u003e \u003cbody\u003e \u003cdiv class=\"scroll\" style=\"--time:20s\"\u003e \u003cdiv\u003e \u003cspan\u003eHTML\u003c/span\u003e \u003cspan\u003eCSS\u003c/span\u003e \u003cspan\u003eJavaScript\u003c/span\u003e \u003cspan\u003eReactJS\u003c/span\u003e \u003cspan\u003eFigma\u003c/span\u003e \u003cspan\u003ePhotoshop\u003c/span\u003e \u003cspan\u003ePremiere Pro\u003c/span\u003e \u003cspan\u003eFigma\u003c/span\u003e \u003cspan\u003eAngular\u003c/span\u003e \u003cspan\u003eNode JS\u003c/span\u003e \u003c/div\u003e \u003cdiv\u003e \u003cspan\u003eHTML\u003c/span\u003e \u003cspan\u003eCSS\u003c/span\u003e \u003cspan\u003eJavaScript\u003c/span\u003e \u003cspan\u003eReactJS\u003c/span\u003e \u003cspan\u003eFigma\u003c/span\u003e \u003cspan\u003ePhotoshop\u003c/span\u003e \u003cspan\u003ePremiere Pro\u003c/span\u003e \u003cspan\u003eFigma\u003c/span\u003e \u003cspan\u003eAngular\u003c/span\u003e \u003cspan\u003eNode JS\u003c/span\u003e \u003c/div\u003e \u003c/div\u003e \u003cdiv class=\"scroll\" style=\"--time:30s\"\u003e \u003cdiv\u003e \u003cspan\u003eHTML\u003c/span\u003e \u003cspan\u003eCSS\u003c/span\u003e \u003cspan\u003eJavaScript\u003c/span\u003e \u003cspan\u003eReactJS\u003c/span\u003e \u003cspan\u003eFigma\u003c/span\u003e \u003cspan\u003ePhotoshop\u003c/span\u003e \u003cspan\u003ePremiere Pro\u003c/span\u003e \u003cspan\u003eFigma\u003c/span\u003e \u003cspan\u003eAngular\u003c/span\u003e \u003cspan\u003eNode JS\u003c/span\u003e \u003c/div\u003e \u003cdiv\u003e \u003cspan\u003eHTML\u003c/span\u003e \u003cspan\u003eCSS\u003c/span\u003e \u003cspan\u003eJavaScript\u003c/span\u003e \u003cspan\u003eReactJS\u003c/span\u003e \u003cspan\u003eFigma\u003c/span\u003e \u003cspan\u003ePhotoshop\u003c/span\u003e \u003cspan\u003ePremiere Pro\u003c/span\u003e \u003cspan\u003eFigma\u003c/span\u003e \u003cspan\u003eAngular\u003c/span\u003e \u003cspan\u003eNode JS\u003c/span\u003e \u003c/div\u003e \u003c/div\u003e \u003cdiv class=\"scroll\" style=\"--time:25s\"\u003e \u003cdiv\u003e \u003cspan\u003eHTML\u003c/span\u003e \u003cspan\u003eCSS\u003c/span\u003e \u003cspan\u003eJavaScript\u003c/span\u003e \u003cspan\u003eReactJS\u003c/span\u003e \u003cspan\u003eFigma\u003c/span\u003e \u003cspan\u003ePhotoshop\u003c/span\u003e \u003cspan\u003ePremiere Pro\u003c/span\u003e \u003cspan\u003eFigma\u003c/span\u003e \u003cspan\u003eAngular\u003c/span\u003e \u003cspan\u003eNode JS\u003c/span\u003e \u003c/div\u003e \u003cdiv\u003e \u003cspan\u003eHTML\u003c/span\u003e \u003cspan\u003eCSS\u003c/span\u003e \u003cspan\u003eJavaScript\u003c/span\u003e \u003cspan\u003eReactJS\u003c/span\u003e \u003cspan\u003eFigma\u003c/span\u003e \u003cspan\u003ePhotoshop\u003c/span\u003e \u003cspan\u003ePremiere Pro\u003c/span\u003e \u003cspan\u003eFigma\u003c/span\u003e \u003cspan\u003eAngular\u003c/span\u003e \u003cspan\u003eNode JS\u003c/span\u003e \u003c/div\u003e \u003c/div\u003e \u003cdiv class=\"scroll\" style=\"--time:40s\"\u003e \u003cdiv\u003e \u003cspan\u003eHTML\u003c/span\u003e \u003cspan\u003eCSS\u003c/span\u003e \u003cspan\u003eJavaScript\u003c/span\u003e \u003cspan\u003eReactJS\u003c/span\u003e \u003cspan\u003eFigma\u003c/span\u003e \u003cspan\u003ePhotoshop\u003c/span\u003e \u003cspan\u003ePremiere Pro\u003c/span\u003e \u003cspan\u003eFigma\u003c/span\u003e \u003cspan\u003eAngular\u003c/span\u003e \u003cspan\u003eNode JS\u003c/span\u003e \u003c/div\u003e \u003cdiv\u003e \u003cspan\u003eHTML\u003c/span\u003e \u003cspan\u003eCSS\u003c/span\u003e \u003cspan\u003eJavaScript\u003c/span\u003e \u003cspan\u003eReactJS\u003c/span\u003e \u003cspan\u003eFigma\u003c/span\u003e \u003cspan\u003ePhotoshop\u003c/span\u003e \u003cspan\u003ePremiere Pro\u003c/span\u003e \u003cspan\u003eFigma\u003c/span\u003e \u003cspan\u003eAngular\u003c/span\u003e \u003cspan\u003eNode JS\u003c/span\u003e \u003c/div\u003e \u003c/div\u003e \u003cdiv class=\"scroll imgBox\" style=\"--time:25s\"\u003e \u003cdiv\u003e \u003cimg src=\"./images/html.png\" alt=\"\"\u003e \u003cimg src=\"./images/css.png\" alt=\"\"\u003e \u003cimg src=\"./images/js.png\" alt=\"\"\u003e \u003cimg src=\"./images/React.png\" alt=\"\"\u003e \u003cimg src=\"./images/angular.png\" alt=\"\"\u003e \u003cimg src=\"./images/figma.png\" alt=\"\"\u003e \u003cimg src=\"./images/photoshop.png\" alt=\"\"\u003e \u003cimg src=\"./images/mui.png\" alt=\"\"\u003e \u003cimg src=\"./images/tailwind.png\" alt=\"\"\u003e \u003cimg src=\"./images/premierePro.png\" alt=\"\"\u003e \u003c/div\u003e \u003cdiv\u003e \u003cimg src=\"./images/html.png\" alt=\"\"\u003e \u003cimg src=\"./images/css.png\" alt=\"\"\u003e \u003cimg src=\"./images/js.png\" alt=\"\"\u003e \u003cimg src=\"./images/React.png\" alt=\"\"\u003e \u003cimg src=\"./images/angular.png\" alt=\"\"\u003e \u003cimg src=\"./images/figma.png\" alt=\"\"\u003e \u003cimg src=\"./images/photoshop.png\" alt=\"\"\u003e \u003cimg src=\"./images/mui.png\" alt=\"\"\u003e \u003cimg src=\"./images/tailwind.png\" alt=\"\"\u003e \u003cimg src=\"./images/premierePro.png\" alt=\"\"\u003e \u003c/div\u003e \u003c/div\u003e \u003cstyle\u003e * { margin: 0; padding: 0; font-family: \"Poppins\", sans-serif; box-sizing: border-box; } body { display: flex; justify-content: center; align-items: center; min-height: 100vh; background: #000; flex-direction: column; } .scroll { position: relative; display: flex; width: 700px; overflow: hidden; -webkit-mask-image: linear-gradient(90deg, transparent, #fff 20%, #fff 80%, transparent) } .scroll div { white-space: nowrap; animation: scroll var(--time) linear infinite; animation-delay: calc(var(--time)*-1); } .scroll div:nth-child(2) { animation: scroll2 var(--time) linear infinite; animation-delay: calc(var(--time)/-2); } @keyframes scroll { 0% { transform: translateX(100%); } 100% { transform: translateX(-100%); } } @keyframes scroll2 { 0% { transform: translateX(0); } 100% { transform: translateX(-200%); } } .scroll div span { display: inline-flex; margin: 10px; letter-spacing: 0.2em; background: #333; color: #fff; padding: 5px 10px; border-radius: 5px; transition: 0.5s; } .scroll div span:hover { background: #3fd2f9; cursor: pointer; } .imgBox div { display: flex; align-items: center; justify-content: center; } .imgBox img { max-width: 100px; scale: 0.8; } \u003c/style\u003e \u003c/body\u003e \u003c/html\u003e 🚀 You also can watch the video to get this skill that infinite horizontal scroll animation."},"title":"🥳 Infinite horizontal scroll animation"},"/blog/interactive-hexagon-grid/":{"data":{"":"\u003c!DOCTYPE html\u003e Hexagon Grid The Interactive Hexagon Grid, crafted with HTML, CSS, and JavaScript, features a captivating dynamic where a light source moves in response to mouse movements behind the hexagonal grid. As the user interacts, the light source dynamically influences the appearance of the hexagons, creating an immersive visual effect. This interactive grid is not only visually engaging but also responsive to user input, offering a modern and interactive element for diverse applications, from creative displays to dynamic data visualizations. The combination of HTML, CSS, and JavaScript enables the seamless integration of this visually appealing and interactive feature into web applications.\nClick me to see the full code index.html\u003c!DOCTYPE html\u003e \u003chtml lang=\"en\"\u003e \u003chead\u003e \u003cmeta charset=\"UTF-8\"\u003e \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e \u003ctitle\u003eHexagon Grid\u003c/title\u003e \u003c/head\u003e \u003cstyle\u003e * { margin: 0; padding: 0; box-sizing: border-box; } body { min-height: 100vh; overflow-x: hidden; } .container { position: relative; background: #2b2b2b; display: flex; justify-content: center; align-items: center; min-height: 100vh; } #hex-grid { height: 100vh; background: #000; } #hex-grid .grid { position: absolute; top: 0; left: 0; background: url(./images/grid.svg)repeat; width: 100%; height: 100%; z-index: 1; background-size: 500px; } #hex-grid .light { position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); width: 15em; height: 15em; filter: blur(15px); background: linear-gradient(90deg, #335bf4 0%, #2ae9c9 100%); z-index: 0; } \u003c/style\u003e \u003cbody\u003e \u003cdiv class=\"container\"\u003e \u003cdiv id=\"hex-grid\"\u003e \u003cdiv class=\"light\"\u003e\u003c/div\u003e \u003cdiv class=\"grid\"\u003e\u003c/div\u003e \u003c/div\u003e \u003c/div\u003e \u003c/body\u003e \u003cscript defer\u003e const light = document.querySelector(\".light\"); const grid = document.querySelector(\"#hex-grid\"); const container = document.querySelector(\".container\"); copnst rect = container.getBoundingClientRect(); grid.addEventListener(\"mousemove\", function (e) { light.style.left = `${e.clientX - rect.left}px`; light.style.top = `${e.clientY - rect.top}px`; }) \u003c/script\u003e \u003c/html\u003e 🚀 You also can watch the video to get this skill."},"title":"🎉 Interactive Hexagon Grid"},"/docs/":{"data":{"":" Everything you need to know for your Clever Cloud journey Getting StartedGet ready to deploy and app in 5 minutes DevelopBest practices on Cloud deployments, sheduling jobs, etc. AdministrateAccess metrics, logs, manage domains, set up scalability… DeployDeploy any app on Clever Cloud. Connect an add-onConnect a managed database and set up cloud storage. Find helpLost? See how to get help. ExtendAccess Clever Cloud API, collect add-ons logs… Clever Tools CLIDeploy and manage your applications and dependencies from your terminal. ReferencesList of environment variables your can use on Clever Clever Cloud, common configuration an all instances… User AccountSet up your account, collaborate and manage permissions. BillingFind invoices, analyse consumption and understand pricing. ContributeSee how to contribute to this documentation. See our step by step tutorials Find your framework Deploy your favorite framework with our step by step guides.\nStarter tutorials Make a starter app and deploy it on Clever Cloud.\nAdd-ons guides Take your dependencies management to the next level."},"title":"_index"},"/docs/ruby/rails/":{"data":{"":" Getting StartedRuby on Rails Guides (v7.1.3) "},"title":"Rails"},"/essay/":{"data":{"":"Additions and reacord to the blog website. Feed "},"title":"Eassy"}}